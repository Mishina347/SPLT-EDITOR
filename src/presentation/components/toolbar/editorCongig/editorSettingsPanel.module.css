.container {
	max-height: 100px;
	background: var(--app-bg-color);
	color: var(--app-text-color);
	display: flex;
	align-items: center;
	gap: 16px;
	padding: 4px;
	margin: 0.8rem;
	border-radius: 12px;
	flex-wrap: wrap;
}
/* フィールドグループ（ラベル + インプットグループ）のコンテナ */
.fieldGroup {
	display: flex;
	flex-direction: column;
	align-items: center;
	min-height: 80px;
	max-width: 200px;
}

.label {
	font-size: 0.8rem;
	font-weight: 500;
	max-height: 24px;
	display: flex;
	align-items: center;
	white-space: nowrap;
	cursor: pointer;
}

.input {
	width: 4rem;
	height: 44px;
	border-radius: 0;
	text-align: center;
	font-size: 1.125rem;
	font-weight: 600;
	outline: none;
	border: none;
	background: transparent;
	transition: all 0.2s ease;
	touch-action: manipulation;
	background: var(--app-bg-color);
	color: var(--app-text-color);
}

.input:hover {
	background: transparent;
}

.input:focus {
	background: transparent;
	outline: none;
	box-shadow: none;
	color: #1f2937;
}

.input:active {
	transform: none;
}

/* セレクトボックスのスタイル */
.select {
	width: 100%;
	height: 44px;
	padding: 0 8px;
	border-radius: 0;
	font-size: 0.9rem;
	font-weight: 500;
	outline: none;
	border: none;
	background: transparent;
	color: var(--app-text-color);
	transition: all 0.2s ease;
	touch-action: manipulation;
	cursor: pointer;
	appearance: none;
	background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M6 9l6 6 6-6'/%3e%3c/svg%3e");
	background-repeat: no-repeat;
	background-position: right 8px center;
	background-size: 16px;
	padding-right: 32px;
}

.select:hover {
	background-color: rgba(0, 0, 0, 0.05);
}

.select:focus {
	background-color: rgba(0, 0, 0, 0.05);
	outline: none;
	box-shadow: none;
}

.select:active {
	transform: none;
}

/* セレクトボックスのオプション */
.select option {
	background: var(--app-bg-color);
	color: var(--app-text-color);
	padding: 8px;
}

/* インプットグループのスタイル - 境目のない一体型UI */
.inputGroup {
	display: flex;
	align-items: center;
	min-height: 64px;
	min-width: 80px;
	padding: 2px;
	border-radius: 8px;
	overflow: hidden;
	box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	background: var(--app-bg-color);
	border: 1px solid #e5e7eb;
	transition: all 0.2s ease;
}

.inputGroup:hover {
	background: #ffffff;
	border-color: #d1d5db;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.inputGroup .input {
	border-radius: 0;
	border: none;
	background: transparent;
	margin: 0;
	flex: 1;
	min-width: 3rem;
	height: 100%;
	padding: 0 8px;
}

/* アクセシビリティ用のスクリーンリーダー専用クラス */
.srOnly {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

/* ステッパーボタンを inputGroup に統合 */
.inputGroup :global(.stepperButton) {
	background: transparent !important;
	border: none !important;
	border-radius: 0 !important;
	box-shadow: none !important;
	width: 44px;
	height: 64px;
	font-size: 1.2rem;
	font-weight: 700;
	color: #6b7280;
	transition: all 0.2s ease;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	user-select: none;
}

.inputGroup :global(.stepperButton):hover {
	background: rgba(59, 130, 246, 0.1) !important;
	color: #3b82f6;
	transform: none !important;
	box-shadow: none !important;
}

.inputGroup :global(.stepperButton):active {
	background: rgba(59, 130, 246, 0.2) !important;
	color: #2563eb;
	transform: scale(0.95) !important;
}

.inputGroup :global(.stepperButton):focus {
	outline: none;
	background: rgba(59, 130, 246, 0.1) !important;
	box-shadow: inset 0 0 0 2px rgba(59, 130, 246, 0.3) !important;
	z-index: 1;
}

/* フォーカス時の視覚的インジケーター強化 - input要素のみに適用 */
.inputGroup:has(.input:focus) {
	border-color: #3b82f6;
	box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
}

/* :has()がサポートされていない場合のフォールバック */
@supports not selector(:has(*)) {
	.inputGroup:focus-within:not(:has(.stepperButton:focus)) {
		box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
		border-radius: 8px;
	}
}

/* タブレット用レスポンシブレイアウト */
@media (max-width: 1024px) {
	.container {
		flex-direction: column;
		align-items: stretch;
		gap: 20px;
		padding: 16px 20px;
		margin: 0.5rem;
	}

	.fieldGroup {
		flex-direction: column;
		align-items: stretch;
		max-width: 200px;
		gap: 6px;
	}

	.label {
		justify-content: center;
		min-width: unset;
		text-align: left;
	}

	.input {
		width: 5rem;
		height: 48px;
		font-size: 1.25rem;
	}

	.inputGroup {
		max-width: 200px;
		min-height: 56px;
	}

	.inputGroup :global(.stepperButton) {
		height: 56px;
		width: 48px;
	}
}

/* スマートフォン用レイアウト */
@media (max-width: 768px) {
	.container {
		flex-direction: column;
		align-items: stretch;
		gap: 20px;
		padding: 16px 20px;
		margin: 0.5rem;
	}

	.fieldGroup {
		flex-direction: column;
		align-items: stretch;
		max-width: 200px;
		gap: 6px;
	}

	.label {
		justify-content: center;
		min-width: unset;
		text-align: left;
	}

	.input {
		width: 5rem;
		height: 48px;
		font-size: 1.25rem;
	}

	.inputGroup {
		max-width: 200px;
		min-height: 56px;
	}

	.inputGroup :global(.stepperButton) {
		height: 56px;
		width: 48px;
	}

	.select {
		height: 48px;
		font-size: 1rem;
	}
}

/* ランドスケープタブレット用 */
@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
	.container {
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: space-around;
	}

	.fieldGroup {
		flex: 1 1 280px;
		min-width: 280px;
		flex-direction: row;
		align-items: center;
	}
}
